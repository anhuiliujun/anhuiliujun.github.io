---
layout: post
title:  "http识别与认证"
date:   2016-11-28 17:59:02 +0800
categories: http
---
### 背景
http最初是无状态的协议，客户端给服务端发送一个请求，服务端就根据这个请求给出响应。随着web的发展，http的应用越来越广泛，我们想在不同的请求之间共享状态，有如下方式可以做到这一点：

- 使用http首部承载用户身份信息
- 客户端ip追踪
- 在url中嵌入识别信息
- 用户登录，用认证方式识别用户
- cookie，一种功能强大且高效的持久身份识别技术

可用于用户身份识别的请求首部如下：

首部名称 | 首部类型 | 首部描述
---|--- | ---
From | 请求 | e-mail
User-Agent | 请求 | 用户的浏览器软件
Referer | 请求 | 用户是从这个页面上依照连接跳转的
Authorization | 请求 | 用户名密码（基本认证）
Client-Ip | 扩展（请求）| 客户端ip
X-Forwarded-For | 扩展（请求）| 客户端ip
Cookie | 扩展（请求）| 服务器产生的ID标签

### 使用http首部识别用户信息
可以根据From、User-Agent、Referer粗略识别用户，但显然这些方式都不能精准的控制。From、User-Agent一般用于网络爬出的追踪。

### 使用客户端ip识别用户信息
可以根据Client-Ip或者X-Forwared-For（有代理时）事儿别用户，但在ip资源极度紧张的今天，一则许多ip都是动态分配的，二则可能上网的用户是经过NAT之后共享一个公网ip的，所以显然这种方式并不能精确识别一个用户。

### 在url中嵌入识别信息
这种方式通过为每个用户生成特定版本的url，每次用户请求之后，将页面的连接全部转换。这种方式存在如下问题：
- 丑陋的url
- 无法共享url
- 破坏缓存
- 额外的负载
- 用户在不同网站之间跳转时，很容易修改url，这样就不能正常工作了
- 在会话期间是非持久的，一旦退出登录，所有信息丢失，除非用户收藏了url

我会在接下来的博客中讨论`认证方式`与`cookie`方式的实现原理与问题。